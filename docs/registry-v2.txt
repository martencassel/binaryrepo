--------------------------------
* Pulling an image
--------------------------------
Image := JSON manifest | individual layer files
Manifest := (image name, tag, fsLayers, signature)

1. Retrieve the manifest
2. Download individual layers using the digests in the manifest

--------------------------------
Pull operations
--------------------------------
* Pulling the image manifest
GET /v2/<name>/manifests/<reference>            reference = tag | digest

* Existing manifest
HEAD /v2/<name>/manifests/<reference>           reference = tag | digest

* Pulling a layer
GET /v2/<name>/blobs/<digest>

--------------------------------
* Image pull
--------------------------------
1. Assemble the image manifest, then pushing each individual layer
2. Client uploads the manifest

A two step process
1. Start the upload, returning upload url
2. Transfer actual data using the upload url
3. The upload url supports, pushing data and check upload status.

--------------------------------
* Push operations
--------------------------------
* Start an upload
POST /v2/<name>/blobs/uploads/

* Check existing layers
HEAD /v2/<name>/blobs/<digest>

* Upload the layer
POST /v2/<name>/blobs/uploads/<uuid>

* Upload Progress
GET /v2/<name>/blobs/uploads/<uuid>

* Monolithic Upload
PUT /v2/<name>/blobs/uploads/<uuid>?digest=<digest>

* Chunked Upload
PATCH /v2/<name>/blobs/uploads/<uuid>

* Completed Upload
PUTH /v2/<name>/blobs/uploads/<uuid>?digest=<digest>

* Cancelling an Upload
DELETE /v2/<name>/blobs/uploads/<uuid>?digest=<digest>

* Cross Repository Blob Mount
POST /v2/<name>/blobs/uploads/<uuid>?digest=<digest>&from=<repository name>

* Deleting a Layer
DELETE /v2/<name>/blobs/<digest>

* Pushing an Image Manifest
PUT /v2/<name>/manifests/<reference>

--------------------------------
* Other operations
--------------------------------
GET /v2/_upload
GET /v2/<name>/tags/list
DELETE /v2/<name>/manifests/<reference>
GET /v2/<name>/tags/list






