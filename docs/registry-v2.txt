* Version
GET /v2/

* Pulling images

* Pulling an Image Manifest
GET /v2/<name>/manifests/<reference>

* Existing Manifests
HEAD /v2/<name>/manifests/<reference>

* Pulling a Layer
GET /v2/<name>/blobs/<digest>


* Pushing images

The client first pushes individual layers, then it will upload the signed image manifest.

* Pushing an individual layer.

The first request starts the upload, returning a url to carry out the second step.
The second step uses the upload url to transfer the actual data.
The url is used to check the upload status. The Location header will indicate the upload location after each request.

* Start an upload
POST /v2/<name>/blobs/uploads

* Existing Layers
HEAD /v2/<name>/blobs/<digest>

* Uploading the Layer

* Upload Progress
GET  /v2/<name>/blobs/uploads/<uuid>

* Monolithic Upload
PUT /v2/<name>/blobs/uploads/<uuid>?digest=<digest>
Content-Length: <size of layer>
Content-Type: application/octet-stream
<Layer Binary Data>

* Chunked Upload
PATCH /v2/<name>/blobs/uploads/<uuid>
Content-Length: <size of chunk>
Content-Range: <start of range>-<end of range>
Content-Type: application/octet-stream
<Layer Chunk Binary Data>

* Completed Upload
PUT /v2/<name>/blobs/uploads/<uuid>?digest=<digest>
Content-Length: <size of chunk>
Content-Range: <start of range>-<end of range>
Content-Type: application/octet-stream
<Last Layer Chunk Binary Data>
Optionally, if all chunks have already been uploaded,
a PUT request with a digest parameter and zero-length
body may be sent to complete and validate the upload.
Multiple “digest” parameters may be provided with different digests.
The server may verify none or all of them but must
notify the client if the content is rejected.

201 Created
Location: /v2/<name>/blobs/<digest>
Content-Length: 0
Docker-Content-Digest: <digest>

* Cancelling an Upload
DELETE /v2/<name>/blobs/uploads/<uuid>

* Cross Repository Blob Mount
* Errors
* Deleting a Layer
DELETE /v2/<name>/blobs/<digest>
202 Accepted
Content-Length: None
* Pushing an Image Manifest
PUT /v2/<name>/manifests/<reference>
Content-Type: <manifest media type>
...